枚举类型
罗盘90°旋转的例子 真好

C指针的主要用处：
1 指针可以用一种简洁的方式访问一个大的数据结构。程序中的数据结构可能大得惊人。
但是，不管这个数据结构有多大，它总要存储在内存中，因此也就要有地址。
2 指针可以使程序不同部分间得数据共享更方便。函数向另一个函数传递数据得地址。
3 指针可以在程序执行时流出内存空间。
4 指针可以记录各数据项之间的关系。（如链表）

c中，任何引用内存中能存储数据的内存单元的表达式 被称为左值。
左值特性：
任何一个左值都存储在内存中，所以都有地址；
一旦声明了一个左值，那么它的地址就不会改变，但是地址中所存储的内容是经常改变的；
根据所声明的数据类型不同，不同的左值占据的内存空间的大小可能也不同；
左值的地址是指针变量，可以存储在内存中，并且可以像数据一样被操纵；

& 以左值为操作数


2.3.5 通过引用传递参数
main()
{
	double a, b, c, x1, x2;
		GetCoefficients(&a, &b, &c);
		SolveQuadratic(a, b, c, &x1, &x2);
		DisplayRoots(x1, x2);
}


# 动态分配
* 静态分配
全局变量 在内存
局部变量 在堆栈（调用函数时分配）

void *malloc(int nBytes);

// 使用惯例
char *cp = (char *)malloc(10); //cp指向10各字节空间的首地址
if(cp == NULL) Error("no memory available");

* 动态数组
double *darray;
darray = malloc(n * sizeof(double));
if(darray == NULL) error("no memory available");

* 动态记录





